{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CACjBC,MAAO,QACPC,SAAU,YACVC,SAAU,SAId,IAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAkBF,SAASC,cAAc,yBACzCE,EAAiBH,SAASC,cAAc,wBACxCG,EAAcJ,SAASC,cAAc,0BAoB3C,SAASI,EAAcR,EAAUS,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEd,WAAUS,UAEpBM,EAAO,CAAEf,WAAUS,S,GAEpBA,E,IA5BPP,EAAKe,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAMC,iBACN,IAAK,IAAIC,EAAW,EAAGA,GAAYb,EAAYc,MAAOD,IAAY,CAChE,IAAME,EAAQC,OAAOlB,EAAgBgB,OAASE,OAAOjB,EAAee,QAAUD,EAAW,GACzFZ,EAAcY,EAAUE,GACrBE,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUS,EAAKgB,EAALhB,MACjBb,EAAAF,GAASG,OAAO6B,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAANlB,EAAM,M,IAEvEmB,OAAM,SAAAH,G,IAAGzB,EAAQyB,EAARzB,SAAUS,EAAKgB,EAALhB,MAClBb,EAAAF,GAASG,OAAOgC,QAAQ,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAANlB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n    width: '500px',\n    position: 'right-top',\n    fontSize: '20px',\n})\n\n\nconst form = document.querySelector(\".form\");\nconst firstDelayInput = document.querySelector('input[name = \"delay\"]');\nconst delayStepInput = document.querySelector('input[name = \"step\"]');\nconst amountInput = document.querySelector('input[name = \"amount\"]');\n\nform.addEventListener(\"submit\", submitForm);\n\nfunction submitForm(event) {\n  event.preventDefault();\n  for (let position = 1; position <= amountInput.value; position++) {\n    const delay = Number(firstDelayInput.value) + Number(delayStepInput.value) * (position - 1);\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  })\n}\n"],"names":["$iU1Pc","parcelRequire","$parcel$interopDefault","Notify","init","width","position","fontSize","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelayInput","$ce04d3a99e08e73b$var$delayStepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","position1","value","delay1","Number","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.53c37dad.js.map"}